util = require 'util'
Commander = require 'commander'
Database = require 'one_pass/database'

class App
  constructor: (args, @output, @error) ->
    @configuration = @parseArgs(args)

  run: (done) ->
    @database = new Database(@configuration.data)
    command = @configuration.args.shift()
    switch command
      when 'show', 'list'
        this[command](@configuration.args, done)
      else
        @show([command].concat(@configuration.args), done)

  show: (args, done) ->
    @requirePassword done, =>
      items = @database.search(args[0])
      for item in items
        @output.write((item.name ? '') + '\n')
        @output.write(util.inspect(item.decrypted) + '\n')
      done(0)

  list: (args, done) ->
    items = @database.search(args[0])
    for item in items
      @output.write((item.name ? '(unnamed)') + '\n')
    done(0)

  requirePassword: (done, callback) ->
    @askPassword (password) =>
      if @database.unlock(password)
        callback(true)
      else
        @output.write('Nope.\n')
        done(1)

  parseArgs: (args) ->
    Commander.parse(args)

  askPassword: (callback) ->
    Commander.password 'Password: ', callback

Commander
  .version('0.0.0')
  .description('1Password command line client.')
  .option('-d, --data <data>')

module.exports = App
